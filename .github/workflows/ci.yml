---
name: CI

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: [main]

  release:
    types: [published]

  push:
    branches-ignore: [main]

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu

        compiler:
          - gcc-12
          - clang-15
          
        generator:
          - "Ninja Multi-Config"

        include:
          - compiler: gcc-12
            gcov_executable: gcov-12
          
          - container: clang-15
            gcov_executable: "llvm-cov-15 gcov"

          # Set up preferred package generators, for given build configurations
          - build_type: Release
            package_generator: TBZ2

    runs-on: ubuntu-22.04
    container: 3uclide/cpps:${{ matrix.os }}-${{ matrix.compiler }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          generator: ${{ matrix.generator }}

      - name: Coverage
        run: |
          task coverage
        env:
          CMAKE_GENERATOR: ${{matrix.generator}}
          GCOV_EXECUTABLE: ${{matrix.gcov_executable}}

      - name: Debug Tests
        run: |
          task test-debug
        env:
          CMAKE_GENERATOR: ${{matrix.generator}}

      - name: Release Tests
        run: |
          task test-release
        env:
          CMAKE_GENERATOR: ${{matrix.generator}}

      - name: Publish to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          flags: ${{ runner.os }}, ${{ matrix.compiler }}, unit-tests
          name: ${{ runner.os }}-${{ matrix.compiler }}-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage.xml
