---
name: CodeQL

on:
  pull_request:
    branches: [main]

  push:
    branches-ignore: [main]

  schedule:
    - cron: '38 0 * * 5'

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp']
        compiler:
          - gcc-12
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Debug

    steps:
    - uses: actions/checkout@v3

    - name: Setup Cache
      uses: ./.github/actions/setup_cache
      with:
        compiler: ${{ matrix.compiler }}
        build_type: ${{ matrix.build_type }}
        generator: ${{ matrix.generator }}

    - name: Setup Cpp
      uses: aminya/setup-cpp@v0.21.0
      with:
        compiler: ${{ matrix.compiler }}
        vcvarsall: ${{ contains(matrix.os, 'windows' )}}

        cmake: true
        ninja: true
        conan: true
        vcpkg: false
        ccache: true
        clangtidy: false
        cppcheck: false
        gcovr: false
        opencppcoverage: false

    - name: Configure CMake
      run: |
        cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Build
      run: |
        cmake --build ./build --config ${{matrix.build_type}}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2